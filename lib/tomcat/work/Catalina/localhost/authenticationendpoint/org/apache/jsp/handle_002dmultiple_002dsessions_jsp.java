/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.22
 * Generated at: 2020-02-25 02:01:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.google.gson.Gson;
import org.wso2.carbon.identity.application.authentication.endpoint.util.AuthContextAPIClient;
import org.wso2.carbon.identity.application.authentication.endpoint.util.Constants;
import java.io.File;
import org.wso2.carbon.identity.core.util.IdentityUtil;
import java.net.URLEncoder;
import java.util.ResourceBundle;
import org.wso2.carbon.identity.application.authentication.endpoint.util.AuthenticationEndpointUtil;
import org.wso2.carbon.identity.application.authentication.endpoint.util.EncodedControl;
import java.nio.charset.StandardCharsets;
import org.apache.commons.lang.StringUtils;
import java.util.Map;
import java.util.HashMap;

public final class handle_002dmultiple_002dsessions_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:length", org.apache.taglibs.standard.functions.Functions.class, "length", new Class[] {java.lang.Object.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(12);
    _jspx_dependants.put("jar:file:/C:/WSO2/repository/deployment/server/webapps/authenticationendpoint/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425996670000L));
    _jspx_dependants.put("/localize.jsp", Long.valueOf(1569960366000L));
    _jspx_dependants.put("/WEB-INF/lib/encoder-jsp-1.2.2.jar", Long.valueOf(1569960046000L));
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1569960046000L));
    _jspx_dependants.put("jar:file:/C:/WSO2/repository/deployment/server/webapps/authenticationendpoint/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425996670000L));
    _jspx_dependants.put("/template-mapper.jsp", Long.valueOf(1569960366000L));
    _jspx_dependants.put("jar:file:/C:/WSO2/repository/deployment/server/webapps/authenticationendpoint/WEB-INF/lib/encoder-jsp-1.2.2.jar!/META-INF/java-encoder.tld", Long.valueOf(1535976792000L));
    _jspx_dependants.put("/init-url.jsp", Long.valueOf(1569960366000L));
    _jspx_dependants.put("/includes/footer.jsp", Long.valueOf(1571964730000L));
    _jspx_dependants.put("/includes/title.jsp", Long.valueOf(1571964730000L));
    _jspx_dependants.put("jar:file:/C:/WSO2/repository/deployment/server/webapps/authenticationendpoint/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425996670000L));
    _jspx_dependants.put("/includes/header.jsp", Long.valueOf(1571964730000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.commons.lang.StringUtils");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.authentication.endpoint.util.EncodedControl");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.authentication.endpoint.util.AuthenticationEndpointUtil");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("java.nio.charset.StandardCharsets");
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("java.util.ResourceBundle");
    _jspx_imports_classes.add("com.google.gson.Gson");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("org.wso2.carbon.identity.core.util.IdentityUtil");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.authentication.endpoint.util.Constants");
    _jspx_imports_classes.add("org.wso2.carbon.identity.application.authentication.endpoint.util.AuthContextAPIClient");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatNumber;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatNumber = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fformatNumber.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    String BUNDLE = "org.wso2.carbon.identity.application.authentication.endpoint.i18n.Resources";
    ResourceBundle resourceBundle = ResourceBundle.getBundle(BUNDLE, request.getLocale(), new
            EncodedControl(StandardCharsets.UTF_8.toString()));

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');

    String identityServerEndpointContextParam = application.getInitParameter("IdentityServerEndpointContextURL");
    String samlssoURL = "../samlsso";
    String commonauthURL = "../commonauth";
    String oauth2AuthorizeURL = "../oauth2/authorize";
    String oidcLogoutURL = "../oidc/logout";
    String openidServerURL = "../openidserver";
    if (StringUtils.isNotBlank(identityServerEndpointContextParam)) {
        samlssoURL = identityServerEndpointContextParam + "/samlsso";
        commonauthURL = identityServerEndpointContextParam + "/commonauth";
        oauth2AuthorizeURL = identityServerEndpointContextParam + "/oauth2/authorize";
        oidcLogoutURL = identityServerEndpointContextParam + "/oidc/logout";
        openidServerURL = identityServerEndpointContextParam + "/oidc/logout";
    }

      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    Map<String, String> templateMap = new HashMap<>();
    templateMap.put("genericForm", "templates/genericForm.jsp");
    templateMap.put("username", "templates/username.jsp");

      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    String promptId = request.getParameter("promptId");
    String authAPIURL = application.getInitParameter(Constants.AUTHENTICATION_REST_ENDPOINT_URL);
    
    if (StringUtils.isBlank(authAPIURL)) {
        authAPIURL = IdentityUtil.getServerURL("/api/identity/auth/v1.1/", true, true);
    }
    if (!authAPIURL.endsWith("/")) {
        authAPIURL += "/";
    }
    authAPIURL += "context/" + request.getParameter("promptId");
    String contextProperties = AuthContextAPIClient.getContextProperties(authAPIURL);
    
    Gson gson = new Gson();
    Map data = gson.fromJson(contextProperties, Map.class);

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <!-- title -->\n");
      out.write("    ");

        File titleFile = new File(getServletContext().getRealPath("extensions/title.jsp"));
        if (titleFile.exists()) {
    
      out.write("\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "extensions/title.jsp", out, false);
      out.write("\n");
      out.write("    ");
 } else { 
      out.write("\n");
      out.write("            ");
      out.write("\n");
      out.write("\n");
      out.write("<!-- localize.jsp MUST already be included in the calling script -->\n");
      out.write("\n");
      out.write("<!-- title -->\n");
      out.write("<title>WSO2 API Manager</title>\n");
      out.write("\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    <link rel=\"icon\" href=\"images/favicon.png\" type=\"image/x-icon\"/>\n");
      out.write("    <link href=\"libs/bootstrap_3.4.1/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"css/Roboto.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"css/custom-common.css\" rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<script>\n");
      out.write("    function getDateFromTimestamp(timestamp) {\n");
      out.write("        var date = new Date(Number(timestamp));\n");
      out.write("        var options = {\n");
      out.write("            month: \"2-digit\",\n");
      out.write("            day: \"2-digit\",\n");
      out.write("            year: \"numeric\",\n");
      out.write("            hour: \"2-digit\",\n");
      out.write("            minute: \"2-digit\",\n");
      out.write("            hour12: true,\n");
      out.write("        };\n");
      out.write("        document.getElementById(timestamp).innerText = date.toLocaleDateString(undefined, options);\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<!-- header -->\n");

    File headerFile = new File(getServletContext().getRealPath("extensions/header.jsp"));
    if (headerFile.exists()) {

      out.write("\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "extensions/header.jsp", out, false);
      out.write('\n');
 } else { 
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("\n");
      out.write("<!-- localize.jsp MUST already be included in the calling script -->\n");
      out.write("\n");
      out.write("<!-- header -->\n");
      out.write("<header class=\"header header-default\">\n");
      out.write("    <div class=\"container-fluid\"><br></div>\n");
      out.write("    <div class=\"container-fluid\">\n");
      out.write("        <div class=\"pull-left brand float-remove-xs text-center-xs\">\n");
      out.write("            <a href=\"#\">\n");
      out.write("                <img src=\"images/logo-inverse.svg\"\n");
      out.write("\t\t             alt=\"WSO2\"\n");
      out.write("                     title=\"WSO2\"\n");
      out.write("                     class=\"logo\">\n");
      out.write("                <h1><em>API Manager</em></h1>\n");
      out.write("            </a>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</header>\n");
      out.write('\n');
 } 
      out.write("\n");
      out.write("\n");
      out.write("<!-- page content -->\n");
      out.write("<div class=\"container-fluid body-wrapper\">\n");
      out.write("    \n");
      out.write("    <div class=\"row\">\n");
      out.write("        <div class=\"col-md-12\">\n");
      out.write("            \n");
      out.write("            <div class=\"container col-xs-10 col-sm-6 col-md-6 col-lg-4 col-centered wr-content wr-login col-centered\">\n");
      out.write("                ");
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      boolean _jspx_th_c_005fset_005f0_reused = false;
      try {
        _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fset_005f0.setParent(null);
        // /handle-multiple-sessions.jsp(102,16) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setVar("data");
        // /handle-multiple-sessions.jsp(102,16) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setValue(data);
        // /handle-multiple-sessions.jsp(102,16) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setScope("request");
        int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
        if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f0);
        _jspx_th_c_005fset_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
      }
      out.write("\n");
      out.write("                ");
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      boolean _jspx_th_c_005fset_005f1_reused = false;
      try {
        _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
        _jspx_th_c_005fset_005f1.setParent(null);
        // /handle-multiple-sessions.jsp(103,16) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f1.setVar("promptId");
        // /handle-multiple-sessions.jsp(103,16) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f1.setValue(URLEncoder.encode(promptId, StandardCharsets.UTF_8.name()));
        // /handle-multiple-sessions.jsp(103,16) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f1.setScope("request");
        int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
        if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f1);
        _jspx_th_c_005fset_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
      }
      out.write("\n");
      out.write("                \n");
      out.write("                <div>\n");
      out.write("                    <h2 class=\"wr-title uppercase blue-bg padding-double white boarder-bottom-blue margin-none\">\n");
      out.write("                        Multiple Active Session(s) Found\n");
      out.write("                    </h2>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"boarder-all \">\n");
      out.write("                    <div class=\"clearfix\"></div>\n");
      out.write("                    <div class=\"padding-double login-form\">\n");
      out.write("                        \n");
      out.write("                        <form name=\"sessionsForm\" action=\"");
      out.print(commonauthURL);
      out.write("\" method=\"POST\"\n");
      out.write("                              onsubmit=\"return validateForm(this.submitted)\">\n");
      out.write("                            <h4 class=\"text-center padding-double\">\n");
      out.write("                                You currently have ");
      if (_jspx_meth_fmt_005fformatNumber_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                                active session(s).\n");
      out.write("                                You are not allowed to have more than ");
      if (_jspx_meth_fmt_005fformatNumber_005f1(_jspx_page_context))
        return;
      out.write(" active session(s).\n");
      out.write("                            </h4>\n");
      out.write("                            <table class=\"table table-striped table-bordered\">\n");
      out.write("                                <thead>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>#</th>\n");
      out.write("                                    <th>Browser</th>\n");
      out.write("                                    <th>Platform</th>\n");
      out.write("                                    <th>Last Accessed</th>\n");
      out.write("                                    <th><input type=\"checkbox\" onchange=\"toggleSessionCheckboxes()\" id=\"masterCheckbox\"\n");
      out.write("                                               checked></th>\n");
      out.write("                                </tr>\n");
      out.write("                                </thead>\n");
      out.write("                                <tbody>\n");
      out.write("                                ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                                </tbody>\n");
      out.write("                            </table>\n");
      out.write("                            <h4 class=\"text-center padding-double\">\n");
      out.write("                                You need to either terminate unwanted active session(s) & proceed, or deny the login.\n");
      out.write("                                <br>\n");
      out.write("                                Please select your option.\n");
      out.write("                            </h4>\n");
      out.write("                            \n");
      out.write("                            <input type=\"hidden\" name=\"promptResp\" value=\"true\">\n");
      out.write("                            <input type=\"hidden\" name=\"promptId\"\n");
      out.write("                                   value=\"");
      if (_jspx_meth_e_005fforHtmlAttribute_005f2(_jspx_page_context))
        return;
      out.write("\">\n");
      out.write("                            \n");
      out.write("                            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 form-group required\">\n");
      out.write("                                <input name=\"terminateActiveSessionsAction\" type=\"submit\"\n");
      out.write("                                       onclick=\"this.form.submitted='terminateActiveSessionsAction';\"\n");
      out.write("                                       class=\"wr-btn grey-bg col-xs-12 col-md-12 col-lg-12 uppercase font-medium\"\n");
      out.write("                                       value=\"Terminate Selected Active Sessions & Proceed\">\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 form-group required\">\n");
      out.write("                                <input name=\"denyLimitActiveSessionsAction\" type=\"submit\"\n");
      out.write("                                       onclick=\"this.form.submitted='denyLimitActiveSessionsAction';\"\n");
      out.write("                                       class=\"wr-btn grey-bg col-xs-12 col-md-12 col-lg-12 uppercase font-medium\"\n");
      out.write("                                       value=\"Deny Login\">\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <div class=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 form-group required\">\n");
      out.write("                                <input name=\"refreshActiveSessionsAction\" type=\"submit\"\n");
      out.write("                                       onclick=\"this.form.submitted='refreshActiveSessionsAction';\"\n");
      out.write("                                       class=\"wr-btn grey-bg col-xs-12 col-md-12 col-lg-12 uppercase font-medium\"\n");
      out.write("                                       value=\"Refresh Sessions\">\n");
      out.write("                            </div>\n");
      out.write("                            <input id=\"ActiveSessionsLimitAction\" type=\"hidden\" name=\"ActiveSessionsLimitAction\"/>\n");
      out.write("                        </form>\n");
      out.write("                        <div class=\"clearfix\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            </div>\n");
      out.write("        \n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- footer -->\n");

    File footerFile = new File(getServletContext().getRealPath("extensions/footer.jsp"));
    if (footerFile.exists()) {

      out.write("\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "extensions/footer.jsp", out, false);
      out.write('\n');
 } else { 
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("\n");
      out.write("<!-- localize.jsp MUST already be included in the calling script -->\n");
      out.write("\n");
      out.write("<!-- footer -->\n");
      out.write("<footer class=\"footer\">\n");
      out.write("    <div class=\"container-fluid\">\n");
      out.write("        <p>WSO2 API Manager | &copy;\n");
      out.write("            <script>document.write(new Date().getFullYear());</script>\n");
      out.write("            <a href=\"https://wso2.com/\"\n");
      out.write("               target=\"_blank\">\n");
      out.write("               <i class=\"icon fw fw-wso2\"></i>\n");
      out.write("               Inc\n");
      out.write("            </a>\n");
      out.write("            . All rights reserved\n");
      out.write("        </p>\n");
      out.write("    </div>\n");
      out.write("</footer>\n");
      out.write('\n');
 } 
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"selected_sessions_validation\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\"\n");
      out.write("     aria-labelledby=\"mySmallModalLabel\">\n");
      out.write("    <div class=\"modal-dialog modal-md\" role=\"document\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span>\n");
      out.write("                </button>\n");
      out.write("                <h4 class=\"modal-title\">Not Enough Sessions Selected</h4>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                You need to select\n");
      out.write("                <span id=\"minimumSessionsElement\" class=\"mandatory-msg\"> at lest 1 session </span>\n");
      out.write("                in order to proceed.\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-footer\">\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">OK</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script src=\"libs/jquery_3.4.1/jquery-3.4.1.js\"></script>\n");
      out.write("<script src=\"libs/bootstrap_3.4.1/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    function toggleSessionCheckboxes() {\n");
      out.write("        var isMasterCheckboxChecked = document.getElementById(\"masterCheckbox\").checked;\n");
      out.write("        var checkboxes = document.sessionsForm.sessionsToTerminate;\n");
      out.write("\n");
      out.write("        if (checkboxes instanceof RadioNodeList) {\n");
      out.write("            for (i = 0; i < checkboxes.length; i++) {\n");
      out.write("                checkboxes[i].checked = isMasterCheckboxChecked;\n");
      out.write("            }\n");
      out.write("        } else {\n");
      out.write("            checkboxes.checked = isMasterCheckboxChecked;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function toggleMasterCheckbox() {\n");
      out.write("        var masterCheckbox = document.getElementById(\"masterCheckbox\");\n");
      out.write("        var checkboxes = document.sessionsForm.sessionsToTerminate;\n");
      out.write("\n");
      out.write("        if (checkboxes instanceof RadioNodeList) {\n");
      out.write("            for (var i = 0; i < checkboxes.length; i++) {\n");
      out.write("                if (!checkboxes[i].checked) {\n");
      out.write("                    masterCheckbox.checked = false;\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            masterCheckbox.checked = true;\n");
      out.write("        } else {\n");
      out.write("            masterCheckbox.checked = checkboxes.checked;\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function validateForm(submittedAction) {\n");
      out.write("        document.getElementById(\"ActiveSessionsLimitAction\").setAttribute(\"value\", submittedAction);\n");
      out.write("\n");
      out.write("        if (submittedAction === \"terminateActiveSessionsAction\") {\n");
      out.write("            var checkboxes = document.sessionsForm.sessionsToTerminate;\n");
      out.write("\n");
      out.write("            if (checkboxes instanceof RadioNodeList) {\n");
      out.write("                for (var i = 0; i < checkboxes.length; i++) {\n");
      out.write("                    if (checkboxes[i].checked) {\n");
      out.write("                        return true;\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            } else if (checkboxes.checked) {\n");
      out.write("                return true;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("        } else if (submittedAction === \"denyLimitActiveSessionsAction\" || submittedAction === \"refreshActiveSessionsAction\") {\n");
      out.write("            return true;\n");
      out.write("        }\n");
      out.write("        $('#selected_sessions_validation').modal();\n");
      out.write("        return false;\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fformatNumber_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatNumber
    org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag _jspx_th_fmt_005fformatNumber_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag) _005fjspx_005ftagPool_005ffmt_005fformatNumber.get(org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag.class);
    boolean _jspx_th_fmt_005fformatNumber_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatNumber_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatNumber_005f0.setParent(null);
      int _jspx_eval_fmt_005fformatNumber_005f0 = _jspx_th_fmt_005fformatNumber_005f0.doStartTag();
      if (_jspx_eval_fmt_005fformatNumber_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_fmt_005fformatNumber_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_fmt_005fformatNumber_005f0);
        }
        do {
          out.write("\n");
          out.write("                                ");
          if (_jspx_meth_e_005fforHtmlContent_005f0(_jspx_th_fmt_005fformatNumber_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                            ");
          int evalDoAfterBody = _jspx_th_fmt_005fformatNumber_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_fmt_005fformatNumber_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_fmt_005fformatNumber_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatNumber.reuse(_jspx_th_fmt_005fformatNumber_005f0);
      _jspx_th_fmt_005fformatNumber_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatNumber_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatNumber_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_e_005fforHtmlContent_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fformatNumber_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  e:forHtmlContent
    org.owasp.encoder.tag.ForHtmlContentTag _jspx_th_e_005fforHtmlContent_005f0 = new org.owasp.encoder.tag.ForHtmlContentTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_e_005fforHtmlContent_005f0);
    try {
      _jspx_th_e_005fforHtmlContent_005f0.setJspContext(_jspx_page_context);
      _jspx_th_e_005fforHtmlContent_005f0.setParent(_jspx_th_fmt_005fformatNumber_005f0);
      // /handle-multiple-sessions.jsp(120,32) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_e_005fforHtmlContent_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:length(requestScope.data[\"sessions\"])}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      _jspx_th_e_005fforHtmlContent_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_e_005fforHtmlContent_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatNumber_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatNumber
    org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag _jspx_th_fmt_005fformatNumber_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag) _005fjspx_005ftagPool_005ffmt_005fformatNumber.get(org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag.class);
    boolean _jspx_th_fmt_005fformatNumber_005f1_reused = false;
    try {
      _jspx_th_fmt_005fformatNumber_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatNumber_005f1.setParent(null);
      int _jspx_eval_fmt_005fformatNumber_005f1 = _jspx_th_fmt_005fformatNumber_005f1.doStartTag();
      if (_jspx_eval_fmt_005fformatNumber_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_fmt_005fformatNumber_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_fmt_005fformatNumber_005f1);
        }
        do {
          out.write("\n");
          out.write("                                ");
          if (_jspx_meth_e_005fforHtmlContent_005f1(_jspx_th_fmt_005fformatNumber_005f1, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                            ");
          int evalDoAfterBody = _jspx_th_fmt_005fformatNumber_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_fmt_005fformatNumber_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_fmt_005fformatNumber_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatNumber.reuse(_jspx_th_fmt_005fformatNumber_005f1);
      _jspx_th_fmt_005fformatNumber_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatNumber_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatNumber_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_e_005fforHtmlContent_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fformatNumber_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  e:forHtmlContent
    org.owasp.encoder.tag.ForHtmlContentTag _jspx_th_e_005fforHtmlContent_005f1 = new org.owasp.encoder.tag.ForHtmlContentTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_e_005fforHtmlContent_005f1);
    try {
      _jspx_th_e_005fforHtmlContent_005f1.setJspContext(_jspx_page_context);
      _jspx_th_e_005fforHtmlContent_005f1.setParent(_jspx_th_fmt_005fformatNumber_005f1);
      // /handle-multiple-sessions.jsp(124,32) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_e_005fforHtmlContent_005f1.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.data[\"MaxSessionCount\"]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_e_005fforHtmlContent_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_e_005fforHtmlContent_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /handle-multiple-sessions.jsp(139,32) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/handle-multiple-sessions.jsp(139,32) '${requestScope.data[\"sessions\"]}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${requestScope.data[\"sessions\"]}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /handle-multiple-sessions.jsp(139,32) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("session");
      // /handle-multiple-sessions.jsp(139,32) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("loop");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                                    <tr>\n");
            out.write("                                        <td>");
            if (_jspx_meth_e_005fforHtmlContent_005f2(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("</td>\n");
            out.write("                                        <td>");
            if (_jspx_meth_e_005fforHtmlContent_005f3(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("</td>\n");
            out.write("                                        <td>");
            if (_jspx_meth_e_005fforHtmlContent_005f4(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("</td>\n");
            out.write("                                        <td id=\"");
            if (_jspx_meth_e_005fforHtmlAttribute_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\">\n");
            out.write("                                            <script>getDateFromTimestamp(");
            if (_jspx_meth_e_005fforJavaScript_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write(");</script>\n");
            out.write("                                        </td>\n");
            out.write("                                        <td><input type=\"checkbox\" onchange=\"toggleMasterCheckbox()\"\n");
            out.write("                                                   value=\"");
            if (_jspx_meth_e_005fforHtmlAttribute_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\"\n");
            out.write("                                                   name=\"sessionsToTerminate\" checked></td>\n");
            out.write("                                    </tr>\n");
            out.write("                                ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_e_005fforHtmlContent_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  e:forHtmlContent
    org.owasp.encoder.tag.ForHtmlContentTag _jspx_th_e_005fforHtmlContent_005f2 = new org.owasp.encoder.tag.ForHtmlContentTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_e_005fforHtmlContent_005f2);
    try {
      _jspx_th_e_005fforHtmlContent_005f2.setJspContext(_jspx_page_context);
      _jspx_th_e_005fforHtmlContent_005f2.setParent(_jspx_th_c_005fforEach_005f0);
      // /handle-multiple-sessions.jsp(141,44) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_e_005fforHtmlContent_005f2.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loop.index + 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_e_005fforHtmlContent_005f2.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_e_005fforHtmlContent_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_e_005fforHtmlContent_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  e:forHtmlContent
    org.owasp.encoder.tag.ForHtmlContentTag _jspx_th_e_005fforHtmlContent_005f3 = new org.owasp.encoder.tag.ForHtmlContentTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_e_005fforHtmlContent_005f3);
    try {
      _jspx_th_e_005fforHtmlContent_005f3.setJspContext(_jspx_page_context);
      _jspx_th_e_005fforHtmlContent_005f3.setParent(_jspx_th_c_005fforEach_005f0);
      // /handle-multiple-sessions.jsp(142,44) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_e_005fforHtmlContent_005f3.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${session[2]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_e_005fforHtmlContent_005f3.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_e_005fforHtmlContent_005f3);
    }
    return false;
  }

  private boolean _jspx_meth_e_005fforHtmlContent_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  e:forHtmlContent
    org.owasp.encoder.tag.ForHtmlContentTag _jspx_th_e_005fforHtmlContent_005f4 = new org.owasp.encoder.tag.ForHtmlContentTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_e_005fforHtmlContent_005f4);
    try {
      _jspx_th_e_005fforHtmlContent_005f4.setJspContext(_jspx_page_context);
      _jspx_th_e_005fforHtmlContent_005f4.setParent(_jspx_th_c_005fforEach_005f0);
      // /handle-multiple-sessions.jsp(143,44) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_e_005fforHtmlContent_005f4.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${session[3]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_e_005fforHtmlContent_005f4.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_e_005fforHtmlContent_005f4);
    }
    return false;
  }

  private boolean _jspx_meth_e_005fforHtmlAttribute_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  e:forHtmlAttribute
    org.owasp.encoder.tag.ForHtmlAttributeTag _jspx_th_e_005fforHtmlAttribute_005f0 = new org.owasp.encoder.tag.ForHtmlAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_e_005fforHtmlAttribute_005f0);
    try {
      _jspx_th_e_005fforHtmlAttribute_005f0.setJspContext(_jspx_page_context);
      _jspx_th_e_005fforHtmlAttribute_005f0.setParent(_jspx_th_c_005fforEach_005f0);
      // /handle-multiple-sessions.jsp(144,48) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_e_005fforHtmlAttribute_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${session[1]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_e_005fforHtmlAttribute_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_e_005fforHtmlAttribute_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_e_005fforJavaScript_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  e:forJavaScript
    org.owasp.encoder.tag.ForJavaScriptTag _jspx_th_e_005fforJavaScript_005f0 = new org.owasp.encoder.tag.ForJavaScriptTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_e_005fforJavaScript_005f0);
    try {
      _jspx_th_e_005fforJavaScript_005f0.setJspContext(_jspx_page_context);
      _jspx_th_e_005fforJavaScript_005f0.setParent(_jspx_th_c_005fforEach_005f0);
      // /handle-multiple-sessions.jsp(145,73) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_e_005fforJavaScript_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${session[1]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_e_005fforJavaScript_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_e_005fforJavaScript_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_e_005fforHtmlAttribute_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  e:forHtmlAttribute
    org.owasp.encoder.tag.ForHtmlAttributeTag _jspx_th_e_005fforHtmlAttribute_005f1 = new org.owasp.encoder.tag.ForHtmlAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_e_005fforHtmlAttribute_005f1);
    try {
      _jspx_th_e_005fforHtmlAttribute_005f1.setJspContext(_jspx_page_context);
      _jspx_th_e_005fforHtmlAttribute_005f1.setParent(_jspx_th_c_005fforEach_005f0);
      // /handle-multiple-sessions.jsp(148,58) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_e_005fforHtmlAttribute_005f1.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${session[0]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_e_005fforHtmlAttribute_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_e_005fforHtmlAttribute_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_e_005fforHtmlAttribute_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  e:forHtmlAttribute
    org.owasp.encoder.tag.ForHtmlAttributeTag _jspx_th_e_005fforHtmlAttribute_005f2 = new org.owasp.encoder.tag.ForHtmlAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_e_005fforHtmlAttribute_005f2);
    try {
      _jspx_th_e_005fforHtmlAttribute_005f2.setJspContext(_jspx_page_context);
      // /handle-multiple-sessions.jsp(162,42) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_e_005fforHtmlAttribute_005f2.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.promptId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_e_005fforHtmlAttribute_005f2.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_e_005fforHtmlAttribute_005f2);
    }
    return false;
  }
}
